@using Newtonsoft.Json
@using Alman.Domain

@model Alman.Web.Areas.Admin.Models.SitesViewModel
@{
    ViewBag.Title = "Sites";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAdmin.cshtml";
}
<div id="sites">
    <div class="row">
        <div class="col-lg-10">
            <h2>Alman Sites</h2>
        </div>

        <div class="col-lg-2 hidden-sm hidden-xs hidden-md">
            <button type="button" data-bind="click: sites.addNew" class="btn btn-info" style="margin-top:15px;margin-bottom:5px">
                <span class="fa fa-plus-circle"></span>&nbsp;&nbsp;Add New Site
            </button>
        </div>
        <div class="col-lg-2 hidden-lg">
            <a style="margin-bottom:15px" href="@Url.Content("~/Admin/Main/AddSite")"><span class="fa fa-plus-circle"></span> Add New Site</a>
        </div>
    </div>
    <hr style="margin-top:0" />
    <div class="row">
        <div class="col-md-12">
            <div style="height:250px" data-bind="koGrid: {
                data: Sites,
                afterSelectionChange: sites.siteSelected,
                selectedItems: SelectedSites,
                multiselect: false,
                footerVisible: false,
                showFilter: false,
                showColumnMenu: false,
                displaySelectionCheckbox: false,
                columnDefs: [
                    { field: 'HostId', displayName: 'Host Id', width: 70},
                    { field: 'HostName', displayName: 'Host Name', width: 140},
                    { field: 'PartitionName', displayName: 'Partition', width: 110},
                    { field: 'HostDescription', displayName: 'Description', width: '*' , minWidth: 120},
                    { field: 'IsDeleted', displayName: 'Inactive', width: 90},
                    { field: 'LastModifiedBy', displayName: 'Last Modified', width: 120},
                ]
            }"></div>
        </div>
    </div>
    <hr />
    <div data-bind="visible: SelectedSites().length > 0, with: SelectedSites()[0]">
        <div class="row">
            <div class="panel panel-primary">
                <div class="panel-heading">
                    <div class="row">
                        <div class="col-md-12">
                            <div style="font-size:12pt">
                                Host ID: <span data-bind="text: HostId"></span>
                            </div>
                        </div>
                    </div>

                </div>
                <div class="panel-body">                    
                    <div class="row">
                        <div class="col-md-6">
                            <label for="hostName">Host Name</label>
                            <input id="hostName" class="form-control" data-bind="value: HostName" />
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <label for="hostDescription">Description</label>
                            <textarea id="hostDescription" rows="5" class="form-control" data-bind="value: HostDescription"></textarea>
                        </div>
                    </div>
                </div>
            </div>
        </div>        
        <div class="row">
            <div class="col-md-6">
                <button id="updateChanges" type="button" class="btn btn-primary has-spinner" data-bind="click: sites.updateChanges">
                    <span class="spinner">
                        <i class="fa fa-circle-o-notch fa-spin"></i>
                    </span>&nbsp;Save Changes
                </button>
                <button type="button" class="btn btn-danger">
                    Inactivate Site
                </button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(function () {
            sites.init();
        })

        var sites = {
            model: null,
            init: function () {
                var serverModel = @Html.Raw(JsonConvert.SerializeObject(Model));
                if (serverModel) {
                    var container = $("#sites")[0];
                    sites.model = ko.mapping.fromJS(serverModel);
                    ko.applyBindings(sites.model, container);
                }
            },
            siteSelected: function() {
                console.log("site selected");
            },
            addNew: function() {
                location.href = "@Url.Content("~/Admin/Main/AddSite")";
            },
            updateChanges: function() {

                $("#updateChanges").addClass("active");
                $("#updateChanges").prop("disabled", true);

                var data = ko.mapping.toJSON(sites.model.SelectedSites()[0]);
                var url = "/admin/main/UpdateSite";

                $.ajax({
                    url: url,
                    data: data,
                    dataType: "json",
                    type: "POST",
                    contentType: "application/json; charset=utf-8"
                })
                .success(function (data, status, xhr) {
                    console.log("success");
                })
                .fail(function (errorMessage) {
                    console.log("failed");
                })
                .always(function() {
                    $("#updateChanges").removeClass("active");
                    $("#updateChanges").prop("disabled", false);
                })
            }
        };
    </script>
}




